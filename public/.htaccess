
# Enable Gzip compression for all text-based assets
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/javascript application/json application/wasm application/xml+rss text/javascript application/x-javascript application/x-font-ttf application/x-font-otf font/ttf font/otf image/svg+xml
  
  # Add correct content-type for fonts and images
  AddType application/vnd.ms-fontobject .eot
  AddType application/x-font-ttf .ttf
  AddType application/x-font-opentype .otf
  AddType application/x-font-woff .woff
  AddType application/x-font-woff2 .woff2
  AddType image/svg+xml .svg
  AddType image/webp .webp
  
  # Compress compressible fonts
  AddOutputFilterByType DEFLATE font/ttf font/otf image/svg+xml
  
  # Compression level (9 is highest)
  DeflateCompressionLevel 9
</IfModule>

# Enable Brotli if available (better than gzip)
<IfModule mod_brotli.c>
  AddOutputFilterByType BROTLI_COMPRESS text/html text/plain text/xml text/css application/javascript application/json application/xml+rss text/javascript
  
  # Brotli quality (11 is highest)
  BrotliCompressionQuality 11
</IfModule>

# Set Expires headers for better caching
<IfModule mod_expires.c>
  ExpiresActive On
  
  # Add default Expires header
  ExpiresDefault "access plus 1 month"
  
  # Images - longer cache time (2 years for immutable content)
  ExpiresByType image/jpeg "access plus 2 years"
  ExpiresByType image/gif "access plus 2 years"
  ExpiresByType image/png "access plus 2 years"
  ExpiresByType image/webp "access plus 2 years"
  ExpiresByType image/svg+xml "access plus 2 years"
  ExpiresByType image/x-icon "access plus 2 years"
  
  # Web fonts - longer cache time
  ExpiresByType font/ttf "access plus 2 years"
  ExpiresByType font/otf "access plus 2 years"
  ExpiresByType font/woff "access plus 2 years"
  ExpiresByType font/woff2 "access plus 2 years"
  ExpiresByType application/x-font-ttf "access plus 2 years"
  ExpiresByType application/x-font-otf "access plus 2 years"
  
  # CSS, JavaScript - longer cache time with versioning
  ExpiresByType text/css "access plus 1 year"
  ExpiresByType text/javascript "access plus 1 year"
  ExpiresByType application/javascript "access plus 1 year"
  
  # HTML - shorter cache time to allow for updates
  ExpiresByType text/html "access plus 0 seconds"
</IfModule>

# Fix issues with image loading and set proper headers
<IfModule mod_headers.c>
  # Add Cache-Control headers for all static assets with immutable directive
  <FilesMatch "\.(ico|gif|jpg|jpeg|png|webp|svg|woff|woff2|ttf|otf|eot)$">
    Header set Cache-Control "public, max-age=31536000, immutable"
  </FilesMatch>
  
  <FilesMatch "\.(css|js)$">
    Header set Cache-Control "public, max-age=31536000, immutable"
  </FilesMatch>
  
  # Special cache control for HTML files
  <FilesMatch "\.html$">
    Header set Cache-Control "no-cache, must-revalidate"
  </FilesMatch>
  
  # Allow cross-origin access to fonts and images
  <FilesMatch "\.(png|jpe?g|gif|webp|svg|woff|woff2|ttf|otf|eot)$">
    Header set Access-Control-Allow-Origin "*"
  </FilesMatch>
  
  # Handle WebP images correctly
  <FilesMatch "\.webp$">
    Header set Content-Type "image/webp"
  </FilesMatch>

  # Add security headers
  Header set X-Content-Type-Options "nosniff"
  Header set X-XSS-Protection "1; mode=block"
  Header set X-Frame-Options "SAMEORIGIN"
  Header set Referrer-Policy "strict-origin-when-cross-origin"
  
  # Mobile-specific optimizations - serve smaller images by default
  <FilesMatch "\-mobile\.webp$">
    Header set Cache-Control "public, max-age=31536000, immutable"
    Header set Vary "User-Agent"
  </FilesMatch>
  
  # Add save-data related optimizations
  <If "%{HTTP:Save-Data} == 'on'">
    <FilesMatch "\-300w\.webp$">
      Header set Cache-Control "public, max-age=31536000, immutable"
      Header set Vary "Save-Data"
    </FilesMatch>
  </If>
</IfModule>

# Handle SPA routing and 404 errors properly
<IfModule mod_rewrite.c>
  RewriteEngine On
  
  # Redirect non-www to www (canonical URL handling)
  RewriteCond %{HTTP_HOST} ^heynia\.com [NC]
  RewriteRule ^(.*)$ https://www.heynia.com/$1 [L,R=301]
  
  # If the requested resource exists as a file or directory, skip the following rules
  RewriteCond %{REQUEST_FILENAME} -f [OR]
  RewriteCond %{REQUEST_FILENAME} -d
  RewriteRule ^ - [L]
  
  # Mobile detection and specific image serving
  RewriteCond %{HTTP_USER_AGENT} Mobile|Android|iPhone|iPad|iPod
  RewriteCond %{REQUEST_URI} \.(jpe?g|png)$
  RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI%.*}-mobile.webp -f
  RewriteRule ^(.+)\.(jpe?g|png)$ $1-mobile.webp [T=image/webp,L]
  
  # Low-end device or slow connection detection (using save-data header)
  RewriteCond %{HTTP:Save-Data} on
  RewriteCond %{REQUEST_URI} \.(jpe?g|png)$
  RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI%.*}-300w.webp -f
  RewriteRule ^(.+)\.(jpe?g|png)$ $1-300w.webp [T=image/webp,L]
  
  # If the request is for a static resource with webp available, serve the webp version
  RewriteCond %{HTTP_ACCEPT} image/webp
  RewriteCond %{REQUEST_URI} \.(jpe?g|png)$
  RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI}.webp -f
  RewriteRule ^(.+)\.(jpe?g|png)$ $1.$2.webp [T=image/webp,L]
  
  # Custom 404 error document
  ErrorDocument 404 /index.html
  
  # Rewrite all non-file requests to index.html for SPA routing
  RewriteRule ^ index.html [L]
</IfModule>

